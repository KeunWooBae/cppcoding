#include <iostream>
#include <cstring>
using namespace std;

int minLev = 21e8;
int vect[5] = { 7,5,4,6,3 };
int target[5] = { 5,3,6,2,4 };

void flip()
{
    for (int i = 0; i < 5; i++) {
        vect[i] = 9 - vect[i];
    }
}

void left()
{
    int backup = vect[0];
    for (int i = 0; i < 4; i++) {
        vect[i] = vect[i + 1];
    }
    vect[4] = backup;
}

void right()
{
    int backup = vect[4];
    for (int i = 3; i >= 0; i--) {
        vect[i + 1] = vect[i];
    }
    vect[0] = backup;
}

int isSame()
{
    for (int i = 0; i < 5; i++) {
        if (vect[i] != target[i]) return 0;
    }
    return 1;
}

void dfs(int level)
{
    if (level >= minLev) return;

    if (isSame() == 1) {
        if (minLev > level) minLev = level;
        return;
    }

    if (level == 5) {
        return;
    }

    int backup[5];
    memcpy(backup, vect, 5 * 4);

    left();
    dfs(level + 1);
    memcpy(vect, backup, 5 * 4);

    right();
    dfs(level + 1);
    memcpy(vect, backup, 5 * 4);

    flip();
    dfs(level + 1);
    memcpy(vect, backup, 5 * 4);

}

int main()
{
    dfs(0);
    cout << minLev;

    return 0;
}
